[
  {
    "objectID": "Maps_and_Figures.html",
    "href": "Maps_and_Figures.html",
    "title": "BBECA Work",
    "section": "",
    "text": "import pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport contextily as cx\nimport matplotlib.patches as mpatches\nimport matplotlib.gridspec as gridspec\nfrom MapTools_py import map_elements as mel\n\nimport statsmodels.api as sm\nimport pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfont = {'size'   : 14}\n\nmatplotlib.rc('font', **font)\n\nBBECA = gpd.read_file('BB_Data/Spatial/ECOSYS_REV_TEM.shp')\nBBECA = BBECA[['PRISTINE', 'ECO', 'MAP_UNIT', 'geometry']]\n\nPS = 'Evergreen Shrubs'\nBS = 'Sedge'\nFRD = 'Cold Deciduous'\nFR = 'Evergreen'\nDS = 'Deciduous Shrubs'\nWA = 'Ponds'\nDIST = 'Disturbed'\n\nClasses = {\n    'Water Lily - Watersh':WA,\n    'Herb. veg on dist. p':DS,\n    'Open Water':WA,\n    'Cultivated Field':DIST,\n    'Disturbed Surface':DIST,\n    'Hardhack Thicket':DS,\n    'Birch Forest':FRD,\n    'Mixed Conifer Forest':FR,\n    'Pine-Salal Forest':FR,\n    'Pine Sphagnum Woodla':PS,\n    'Beakrush - Three-way':BS,\n    'Pine Sphagnum Tall S':PS,\n    'Beakrush - Sphagnum':BS,\n    'Pine Sphagnum Low Sh':PS,\n}\n\nColors ={\n    PS:'#e3f772',#yellow green\n    BS:'#76bd68',#light green\n    FRD:'#0eb0a5',#dark teal\n    FR:'#193d02',#dark green\n    DS:'#f5b44c',#light orange\n    WA:'#053ba8',#dark blue\n    DIST:'grey'\n}\n\nprint(Colors)\n\nBBECA['PFT'] = BBECA['MAP_UNIT']\nBBECA['PFT'] = BBECA['PFT'].replace(Classes)\n\nBBECA.loc[BBECA['PFT']=='Other','MAP_UNIT']='Other'\n\nBBECA['AREA_sqKM']=BBECA.area.values/1e6\n\nTowers = gpd.read_file('BB_Data/Spatial/Towers.shp')\nTowers.loc[Towers['Name']=='Sapling_NoTreatment','Name']='BBS'\nTowers['X'] = Towers.geometry.x\nTowers['Y'] = Towers.geometry.y\n\nBurnZones = gpd.read_file('BB_Data/Spatial/BurnZones.shp')\n\nChambers = gpd.read_file('BB_Data/Spatial/Chamber_Sites_2016_Burn_Zone.shp')\nfor eco_type in BBECA['MAP_UNIT'].unique():\n    unit = BBECA.loc[BBECA['MAP_UNIT']==eco_type].dissolve().geometry[0]\n    Chambers.loc[Chambers.geometry.intersects(unit)==True,'Unit'] = eco_type.replace(\n        'Pine Sphagnum ','').replace('Low Sh','Low Shurb').replace('Tall S','Tall Shurb').replace('Woodla','Woodland')\n\nChambers=Chambers[['geometry','Unit']].copy()\n\nGrid = gpd.read_file('BB_Data/Spatial/SeedlingRemoval.shp')\nGrid.loc[Grid['year_done']!='2024','Treatment']='Seedling Removal'\nGrid.loc[Grid['year_done']=='2024','Treatment']='Control'\nGrid = Grid[['geometry','Treatment']].copy()\nGrid = Grid.dissolve(by='Treatment')\n\nfor i,row in Grid.iterrows():\n    unit = row.geometry\n    Chambers.loc[Chambers.geometry.intersects(unit)==True,'Treatment'] = i\n    Chambers.loc[Chambers.geometry.intersects(unit)==True,'Zone'] = 2016\n    \nChambers['Treatment']=Chambers['Treatment'].fillna('Control')\nChambers['Zone']=Chambers['Zone'].fillna(2005)\n\nChambers.loc[Chambers['Treatment']=='Seedling Removal','marker']='^'\nChambers.loc[Chambers['Treatment']=='Control','marker']='v'\n\nChambers['geometry'] = Chambers.buffer(50)\nChambers = Chambers.dissolve(by=['Unit','Treatment','Zone'])\n\nChambers['geometry']=Chambers.geometry.centroid\n\n\n\nChambers = Chambers.reset_index()\n\nNDVI = pd.read_csv('BB_Data/BBECA_Annual_NDVI.csv',parse_dates={'Date':['system:time_start']},index_col='Date')\n\nrename = {\n    'Water':WA,\n    # 'Pine\\nSphagnum':PS\n}\n\nNDVI = NDVI.rename(columns=rename)\n\nNDVI = NDVI.drop('Ponds',axis=1)\n\nEco = BBECA[['PFT','AREA_sqKM','geometry']].dissolve(by='PFT',aggfunc='sum')\nEco['Pct']=Eco['AREA_sqKM']/Eco['AREA_sqKM'].sum()\nEco = Eco.sort_values(by='Pct')\nEco.loc[Eco.index!='Disturbed'].to_file('BB_Data/Ecosystem_Summary.shp')\n\n\nfor key,color in Colors.items():\n    Eco.loc[Eco.index==key,'Color']=color\n    \nEco\n\n{'Evergreen Shrubs': '#e3f772', 'Sedge': '#76bd68', 'Cold Deciduous': '#0eb0a5', 'Evergreen': '#193d02', 'Deciduous Shrubs': '#f5b44c', 'Ponds': '#053ba8', 'Disturbed': 'grey'}\n\n\n\n\n\n\n  \n    \n      \n      geometry\n      AREA_sqKM\n      Pct\n      Color\n    \n    \n      PFT\n      \n      \n      \n      \n    \n  \n  \n    \n      Ponds\n      MULTIPOLYGON (((499585.656 5439869.500, 499587...\n      0.805043\n      0.026922\n      #053ba8\n    \n    \n      Cold Deciduous\n      MULTIPOLYGON (((500016.375 5437614.000, 500017...\n      1.352961\n      0.045246\n      #0eb0a5\n    \n    \n      Disturbed\n      MULTIPOLYGON (((497963.156 5439784.500, 497957...\n      1.635015\n      0.054678\n      grey\n    \n    \n      Deciduous Shrubs\n      MULTIPOLYGON (((500017.219 5437575.000, 500015...\n      1.642366\n      0.054924\n      #f5b44c\n    \n    \n      Evergreen\n      MULTIPOLYGON (((501761.500 5439277.000, 501775...\n      3.406008\n      0.113904\n      #193d02\n    \n    \n      Sedge\n      MULTIPOLYGON (((500933.469 5439790.500, 500937...\n      6.954329\n      0.232566\n      #76bd68\n    \n    \n      Evergreen Shrubs\n      MULTIPOLYGON (((498978.531 5439140.000, 498999...\n      14.106852\n      0.471760\n      #e3f772\n    \n  \n\n\n\n\n\nfig = plt.figure(figsize=(12,9))\ngs = gridspec.GridSpec(100, 100)\nbar=fig.add_subplot(gs[7:65, 5:25])\nmap=fig.add_subplot(gs[7:75, 26:])\nline=fig.add_subplot(gs[75:, 0:])\nClass_Patches = []\nbar_ylbl = []\nbar_ytick = []\nfor index,row in Eco.iterrows():\n    kwargs = {\n        'facecolor':row['Color'],\n        'linewidth':.5,\n        'edgecolor':'#646669'\n        }\n    Eco.loc[Eco.index==index].plot(ax=map,**kwargs)\n    bar.barh(index,row['AREA_sqKM'],\n             **kwargs)\n    try:\n        NDVI[index].plot(ax=line,color='k',linewidth=2)\n        NDVI[index].plot(ax=line,color=row['Color'],linewidth=1.5)\n    except:\n        pass\n\nbar.grid(axis='x')\nbar.set_xlabel('Area (km$^2$)',fontsize=16)\n\nkwargs = {\n    'edgecolor':'k',\n    'hatch':'||',\n    'facecolor':'None',\n    'label':'2005'\n    }\nPatches = []\nPatches.append(mpatches.Patch(**kwargs))\nBurnZones.loc[BurnZones['Year']==2005].plot(\n    ax=map,**kwargs)\n\nkwargs['label']='2016'\nkwargs['hatch']='--'\n\nPatches.append(mpatches.Patch(**kwargs))\nBurnZones.loc[BurnZones['Year']==2016].plot(\n    ax=map,**kwargs)\n\nmap.get_xaxis().set_visible(False)\nmap.get_yaxis().set_visible(False)\n# map.set_title(\nmap.legend(handles=(Patches), loc=4,title='Fires')\n\nline.set_ylabel('MODIS Derived NDVI')\nline.grid()\nline.set_xlabel('Average Maximum Annual NDVI (MODIS) by Year')\n\ncx.add_basemap(map,source=cx.providers.Stamen.TonerLite, crs=Eco.crs, zoom=14)\nplt.suptitle('PFTs from 1999 Ecosystem Classifcation Map',y=0.87,fontsize=20)\n# plt.tight_layout()\nplt.savefig('images/EcosystemMap.png',dpi=300)\n\n\n\n\n\n# fig = plt.figure(figsize=(10,10))\n# gs = gridspec.GridSpec(100, 100)\n# bar=fig.add_subplot(gs[7:63, 0:20])\n# map=fig.add_subplot(gs[0:70, 21:])\n# line=fig.add_subplot(gs[71:, 0:])\n# Class_Patches = []\n# bar_ylbl = []\n# bar_ytick = []\n# for index,row in Eco.iterrows():\n#     kwargs = {\n#         'facecolor':row['Color'],\n#         'linewidth':.5,\n#         'edgecolor':'#646669'\n#         }\n#     Eco.loc[Eco.index==index].plot(ax=map,**kwargs)\n#     bar.barh(index,row['AREA_sqKM'],\n#              **kwargs)\n# bar.grid(axis='x')\n# bar.set_xlabel('Area (km$^2$)')\n# bar.set_title('Ecosystems')\n\n# # kwargs = {\n# #     'marker':'s',\n# #     'facecolor':'r',\n# #     'edgecolor':'k',\n# #     's':50\n# #     }\n\n# # label_pad = 45\n\n# # BB = Towers.loc[Towers['Name']!='BBS']\n# # map.scatter(BB['X'],BB['Y'],\n# #            label='Long-Term',\n# #            **kwargs)\n# # for i,row in BB.iterrows():\n# #     map.text(row['X']+label_pad,row['Y']+label_pad,f'est. {int(row.Start)}',color='white')\n\n# # kwargs['marker'] = 'o'\n# # BBS = Towers.loc[Towers['Name']=='BBS']\n# # map.scatter(BBS['X'],BBS['Y'],\n# #            label='Mobile',\n# #            **kwargs)\n# # for i,row in BBS.iterrows():\n# #     map.text(row['X']+label_pad,row['Y']+label_pad,f'est. *2023',color='white')\n\n# # kwargs['facecolor'] ='white'\n# # for treat in Chambers['Treatment'].unique():\n# #     row = Chambers.loc[((Chambers['Zone']==2016)&(Chambers['Treatment']==treat))]\n# #     kwargs['marker'] = row['marker'].iloc[0]\n# #     map.scatter(row.geometry.x,row.geometry.y,\n# #            label=treat,\n# #            **kwargs)\n\n# # handles, labels = map.get_legend_handles_labels()\n# # handles.insert(0,'Flux Towers')\n# # labels.insert(0,'')\n\n# # handles.insert(3,'Chamber Plots')\n# # labels.insert(3,'')\n# # map.legend(handles=(handles),labels=(labels),loc=4,\n# #            handler_map={str: mel.LegendTitle({'fontsize': 14})})\n# map.get_xaxis().set_visible(False)\n# map.get_yaxis().set_visible(False)\n# map.set_title('Burns Bog Ecological Conservancy Area')\n\n# cx.add_basemap(map,source=cx.providers.Stamen.TonerLite, crs=Eco.crs, zoom=14)\n# plt.savefig('images/EcosystemMap.png',dpi=500)\n\n\n\n\n# NDVI.plot()\n\n\n\nBoundary = BBECA[['geometry']].dissolve().explode(index_parts=True)\nBoundary = Boundary.to_crs(epsg=3857)\n\nScale = 35000\n\nfig,ax=plt.subplots(figsize=(5,5))\n\naccess_token='pk.eyJ1IjoidWJjbWljcm9tZXQiLCJhIjoiY2xmMnJzYzlnMGFsYTNxcW1kYWhubjBiaSJ9.rhIOVatxQoS4M__qIFv6Pg'\n\ntileurl = 'https://api.mapbox.com/v4/mapbox.satellite/{z}/{x}/{y}@2x.png?access_token=' + str(access_token)\n\n# tileurl = 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\n\nBoundary.plot(ax=ax,facecolor='None',edgecolor='red',linewidth=2,linestyle='--')\nxl = ax.get_xlim()\nyl = ax.get_ylim()\n\naspect = ((xl[0]-xl[1])/(yl[0]-yl[1]))\n\nax.set_ylim(yl[0]-Scale,yl[1]+Scale)\nax.set_xlim(xl[0]-Scale*aspect,xl[1]+Scale*aspect)\n\ncx.add_basemap(ax,source=tileurl, zoom=12)\n\nax.get_xaxis().set_visible(False)\nax.get_yaxis().set_visible(False)\n\nplt.tight_layout()\nplt.savefig('images/Basemap.png',dpi=300)\n\n\n\n\n\n# import rasterio as rio\n# import numpy as np\n# from rasterio.plot import show\n# from rasterio.warp import calculate_default_transform, reproject, Resampling\n# path = \"/mnt/g/My Drive/earthengine/\"\n# name = \"S2_Summer_Composite.tif\"\n# new_name = \"S2_Summer_Composite_projected.tif\"\n\n\n# BBECA.crs\n\n\n# dst_crs = 'EPSG:26910'\n\n# Projected_Image = 'temp/FI_Projected.tif'\n\n# with rio.open(path+name) as src:\n#     transform, width, height = calculate_default_transform(\n#         src.crs, dst_crs, src.width, src.height, *src.bounds)\n#     kwargs = src.meta.copy()\n#     kwargs.update({\n#         'crs': dst_crs,\n#         'transform': transform,\n#         'width': width,\n#         'height': height\n#     })\n\n#     with rio.open(Projected_Image, 'w', **kwargs) as dst:\n#         for i in range(1, src.count + 1):\n#             # clip = pct_clip(rio.band(src, i))\n#             reproject(\n#                 source=rio.band(src, i),\n#                 destination=rio.band(dst, i),\n#                 src_transform=src.transform,\n#                 src_crs=src.crs,\n#                 dst_transform=transform,\n#                 dst_crs=dst_crs,\n#                 resampling=Resampling.nearest)\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Van = pd.read_csv(\"BB_Data/VANCOUVER INT'L A.csv\",parse_dates=['LOCAL_DATE'],low_memory=False)\n# BB1 = pd.read_csv(\"BB_Data/VANCOUVER INTL A.csv\",parse_dates=['LOCAL_DATE'],low_memory=False)\n\n# Van = pd.concat(\n#     [Van,BB1]\n# )\n\n# Van = Van.set_index('LOCAL_DATE')\n\n# print(Van['PRECIP_AMOUNT'].describe())\n\n# Van = Van[['TEMP','PRECIP_AMOUNT']].resample('Y').sum()\n# Van\n\n\n\n\nBB1 = pd.read_csv('BB_Data/BB1_Climate.csv',parse_dates={'Date':[0]},low_memory=False)\nBB1 = BB1.set_index('Date')\nBB1 = BB1.loc[BB1.index.year<=2022]\n\nBB1.loc[BB1['ET']<=0,'ET']=np.nan\n# BB1\n\n\nTemp = BB1[['ET','VPD','P']].dropna()\n\nX = sm.add_constant(Temp[['VPD','P']],prepend=False)\nmod = sm.OLS(Temp['ET'], X)\n\n\nX = sm.add_constant(BB1[['VPD','P']],prepend=False)\n\nres = mod.fit()\n\n\nBB1['ET_est']=BB1['ET'].fillna(res.predict(X))\n\nfig,ax = plt.subplots()\nax.plot(BB1.resample('M').sum()['ET_est'] )\nax.plot(BB1.resample('M').sum()['ET'] )\n# ax.scatter(BB1['ET'],BB1['VPD'])\n# ax.scatter(BB1['ET_est'],BB1['VPD'],color='red')\n\nprint(res.summary())\n\nprint(BB1.mean()['TA'])\nprint(BB1.resample('Y').sum()[['P','ET_est']].mean())\n\n                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                     ET   R-squared:                       0.580\nModel:                            OLS   Adj. R-squared:                  0.580\nMethod:                 Least Squares   F-statistic:                 2.407e+04\nDate:                Wed, 19 Apr 2023   Prob (F-statistic):               0.00\nTime:                        07:26:12   Log-Likelihood:                 55252.\nNo. Observations:               34811   AIC:                        -1.105e+05\nDf Residuals:                   34808   BIC:                        -1.105e+05\nDf Model:                           2                                         \nCovariance Type:            nonrobust                                         \n==============================================================================\n                 coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nVPD            0.0135   6.21e-05    216.740      0.000       0.013       0.014\nP             -0.0066      0.002     -4.276      0.000      -0.010      -0.004\nconst          0.0060      0.000     16.859      0.000       0.005       0.007\n==============================================================================\nOmnibus:                     5207.961   Durbin-Watson:                   0.207\nProb(Omnibus):                  0.000   Jarque-Bera (JB):            40096.829\nSkew:                           0.499   Prob(JB):                         0.00\nKurtosis:                       8.162   Cond. No.                         33.1\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n10.498408350667175\nP         1164.614298\nET_est     745.290121\ndtype: float64\n\n\n\n\n\n\n# import pandas as pd\n# import matplotlib.pyplot as plt\n\n# BB1 = pd.read_csv('BB_Data/BB1_Climate.csv',parse_dates={'Date':[0]},low_memory=False)\n# BB1 = BB1.set_index('Date')\n# BB1 = BB1.loc[BB1.index.year<=2022]\n\n\nBB1_m = BB1[['TA']].groupby(BB1.index.month).mean()\nBB1_ym = BB1[['P','ET_est']].resample('m').sum()\nBB1_m[['P','ET']] = BB1_ym.groupby(BB1_ym.index.month).mean()\n# BB1_m['ET'] = BB1_ym.groupby(BB1_ym.index.month).mean()['ET_est']\n\nWTD=pd.read_csv('BB_Data/BB1_WTD_Corrected.csv',parse_dates=['Date'],index_col=['Date'])\n\nkwargs = {'color':'red','edgecolor':'k'}\n\nfig,ax=plt.subplots(3,figsize=(8,8),sharex=True)\nax[0].bar(BB1_m.index,BB1_m['TA'],**kwargs)\nax[0].grid()\nax[0].set_ylabel('$\\circ C$')\nax[0].set_title('Air Temperature (2016 - 2022)')\n\nkwargs['color']='blue'\nax[1].bar(BB1_m.index,BB1_m['P'],**kwargs,label='Precip')\nax[1].plot(BB1_m.index,BB1_m['ET'],color='k',linewidth=2)\nax[1].plot(BB1_m.index,BB1_m['ET'],color='r',linewidth=1.5,label='ET')\nax[1].grid()\nax[1].set_ylabel('mm')\nax[1].set_title('Precipitation & Evapotranspiration (2016 - 2022)')\nax[1].legend()\n\nkwargs['color'] = 'purple'\n\nWTD_m = WTD.groupby(WTD.index.month).mean()\nax[2].bar(WTD_m.index,WTD_m['WTD_est'],**kwargs)\nax[2].grid()\nax[2].set_ylabel('cm')\nax[2].set_title('Water Table Height (2018 - 2022)')\nax[2].set_xticks([2,4,6,8,10,12])\nax[2].set_xticklabels(['Feb','Apr','Jun','Aug','Oct','Dec'])\n\nplt.tight_layout()\nplt.savefig('images/Climatology.png',dpi=300)\n\n\n\n\n\nprint(BB1['TA'].mean().round(2))\nfrom scipy import stats\n\n# BB1['ET']=BB1['ET'].interpolate()\n\nprint('Balance: ',np.round(BB1['ET'].mean()*48*356,2),np.round(BB1['P'].mean()*48*356,2))\n\nprint(np.round(BB1['P'].std()/(BB1['P'].count()**.5)*stats.t.ppf(0.95,BB1['P'].count())*48*356,2))\nBB1\n\n10.5\nBalance:  736.48 1137.41\n21.36\n\n\n\n\n\n\n  \n    \n      \n      P\n      TA\n      ET\n    \n    \n      Date\n      \n      \n      \n    \n  \n  \n    \n      2016-01-01 00:30:00.000003328\n      0.0\n      -5.254056\n      NaN\n    \n    \n      2016-01-01 00:59:59.999996672\n      0.0\n      -4.869694\n      NaN\n    \n    \n      2016-01-01 01:30:00.000000000\n      0.0\n      -4.534694\n      NaN\n    \n    \n      2016-01-01 02:00:00.000003328\n      0.0\n      -4.130424\n      NaN\n    \n    \n      2016-01-01 02:29:59.999996672\n      0.0\n      -4.812542\n      NaN\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      2022-12-31 21:30:00.000003328\n      0.0\n      3.239040\n      NaN\n    \n    \n      2022-12-31 21:59:59.999996672\n      0.0\n      3.637281\n      NaN\n    \n    \n      2022-12-31 22:30:00.000000000\n      0.0\n      2.872108\n      NaN\n    \n    \n      2022-12-31 23:00:00.000003328\n      0.0\n      3.287500\n      NaN\n    \n    \n      2022-12-31 23:29:59.999996672\n      0.0\n      2.639389\n      NaN\n    \n  \n\n122735 rows × 3 columns\n\n\n\n\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n\n# sudo mount -a\n\nClim = pd.DataFrame()\n\nfor y in range(2016,2024):\n\n    Dir = f'/mnt/w/{y}/BB'\n\n    WL = '/Met/MET_WaterLevel_Avg'\n    BH = '/Met/MET_Bog_Height_Avg'\n    P = '/Clean/SecondStage/P_1_1_1'\n    TA = '/Clean/SecondStage/TA_1_1_1'\n    ET = '/Flux/Clean/ET'\n    VPD = '/Clean/SecondStage/VPD_1_1_1'\n    Time = '/Met/clean_tv'\n    WL = Dir + WL\n    BH = Dir + BH\n    P = Dir + P\n    TA = Dir + TA\n    ET = Dir + ET\n    VPD = Dir + VPD\n    time_file = Dir + Time\n\n    Time = np.fromfile(open(time_file, mode='rb'), 'float64')\n    # WL = np.fromfile(open(WL, mode='rb'), 'float32')\n    # BH = np.fromfile(open(BH, mode='rb'), 'float32')\n    P = np.fromfile(open(P, mode='rb'), 'float32')\n    TA = np.fromfile(open(TA, mode='rb'), 'float32')\n    ET = np.fromfile(open(ET, mode='rb'), 'float32')\n    VPD = np.fromfile(open(VPD, mode='rb'), 'float32')\n    \n    Time = pd.to_datetime(Time-719529,unit='D')\n\n    Clim = pd.concat([\n        Clim,\n        pd.DataFrame(index=Time,data={'P':P,'TA':TA,'ET':ET,'VPD':VPD})\n        ])\n\n\nClim = Clim.loc[Clim.index.year<=2023]\nClim.to_csv('BB_Data/BB1_Climate.csv')\nClim.head()\n\n\n\n\n\n  \n    \n      \n      P\n      TA\n      ET\n      VPD\n    \n  \n  \n    \n      2016-01-01 00:30:00.000003328\n      0.0\n      -5.254056\n      NaN\n      0.207189\n    \n    \n      2016-01-01 00:59:59.999996672\n      0.0\n      -4.869694\n      NaN\n      0.211804\n    \n    \n      2016-01-01 01:30:00.000000000\n      0.0\n      -4.534694\n      NaN\n      0.221776\n    \n    \n      2016-01-01 02:00:00.000003328\n      0.0\n      -4.130424\n      NaN\n      0.283990\n    \n    \n      2016-01-01 02:29:59.999996672\n      0.0\n      -4.812541\n      NaN\n      0.264534\n    \n  \n\n\n\n\n\n\n\n                                 OLS Regression Results                                \n=======================================================================================\nDep. Variable:                     ET   R-squared (uncentered):                   0.700\nModel:                            OLS   Adj. R-squared (uncentered):              0.700\nMethod:                 Least Squares   F-statistic:                          1.105e+05\nDate:                Tue, 18 Apr 2023   Prob (F-statistic):                        0.00\nTime:                        01:09:41   Log-Likelihood:                          80022.\nNo. Observations:               47460   AIC:                                 -1.600e+05\nDf Residuals:                   47459   BIC:                                 -1.600e+05\nDf Model:                           1                                                  \nCovariance Type:            nonrobust                                                  \n==============================================================================\n                 coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nVPD            0.0138   4.15e-05    332.471      0.000       0.014       0.014\n==============================================================================\nOmnibus:                     8556.115   Durbin-Watson:                   0.213\nProb(Omnibus):                  0.000   Jarque-Bera (JB):           132693.156\nSkew:                           0.414   Prob(JB):                         0.00\nKurtosis:                      11.150   Cond. No.                         1.00\n==============================================================================\n\nNotes:\n[1] R² is computed without centering (uncentered) since the model does not contain a constant.\n[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n\n\n\n\n\n\n# WTD.to_csv('BB_Data/BB1.WTD')\n# WTD.resample('D').mean().plot(kind='scatter',x='WL',y='BH')\nWTD = pd.read_csv('BB_Data/BB1.WTD',parse_dates={'Date':[0]})\nWTD = WTD.set_index('Date')\nWTD = WTD.resample('30T').nearest()\n\nWTD_Man = pd.read_csv('BB_Data/BBFluxWell_SaraKnox.csv',skiprows=3,parse_dates=['Date'])\nWTD_Man = WTD_Man.set_index(WTD_Man['Date'])\n\nWTD_Man = WTD_Man.drop('Date',axis=1)\n# WTD\nWTD_Man['Pipe'] = WTD_Man[['Ground_centralWell_westSideofPipe','Ground_centralWell_southSideofPipe']].mean(axis=1)\n\nWTD_Man['WTD']=WTD_Man['Pipe']-WTD_Man['WT_centralWell']\n\nWTD_Man = WTD_Man.resample('30T').last()\n\nWTD = WTD.join(WTD_Man[['WTD','Pipe']])\nWTD_BU = WTD.copy()\n\n\n\n\nWTD = WTD[['WL','WTD']].dropna()\nfig,ax=plt.subplots()\nax.scatter(WTD['WL'],WTD['WTD'],c=WTD.index.year)\n\nX = sm.add_constant(WTD['WL'],prepend=False)\n\nmod = sm.OLS(WTD['WTD'], X)\n\nres = mod.fit()\n\nX = sm.add_constant(WTD_BU['WL'],prepend=False)\n\nWTD_BU['WTD_est'] = res.predict(X)\n\nfig,ax = plt.subplots()\nax.plot(WTD_BU.index,WTD_BU['WTD_est'] )\n\nprint(res.summary())\n\nWTD_BU.to_csv('BB_Data/BB1_WTD_Corrected.csv')\n\n                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                    WTD   R-squared:                       0.849\nModel:                            OLS   Adj. R-squared:                  0.844\nMethod:                 Least Squares   F-statistic:                     201.8\nDate:                Mon, 17 Apr 2023   Prob (F-statistic):           2.48e-16\nTime:                        17:27:50   Log-Likelihood:                -53.523\nNo. Observations:                  38   AIC:                             111.0\nDf Residuals:                      36   BIC:                             114.3\nDf Model:                           1                                         \nCovariance Type:            nonrobust                                         \n==============================================================================\n                 coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nWL             0.2299      0.016     14.207      0.000       0.197       0.263\nconst        -16.2025      1.025    -15.806      0.000     -18.282     -14.124\n==============================================================================\nOmnibus:                        1.589   Durbin-Watson:                   1.089\nProb(Omnibus):                  0.452   Jarque-Bera (JB):                0.663\nSkew:                           0.072   Prob(JB):                        0.718\nKurtosis:                       3.631   Cond. No.                         394.\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About the Burns Bog Ecological Conservancy",
    "section": "",
    "text": "The Burns Bog Ecological Conservancy Area (BBECA) in Delta, Canada protects the largest raised peat bog on the West Coast. After decades of peat harvesting, the BBECA was established in 2005 with the aim of restoring ecosystem health and enhancing the water and carbon storage capacity of the bog. Water and carbon (CO2 and CH4) flux measurements began in 2014, when the CA-DBB flux tower was installed in a beakrush-sphagnum ecosystem undergoing active restoration via ditch blocking. The CA-DB2 tower was installed in 2019 in a pine-sphagnum-low-shrub ecosystem undergoing passive restoration. Flux chamber and a pore water sampling has also been conducted in the BBECA in recent years, and a temporary flux tower will be installed in a pine-sphagnum-woodland ecosystem for the 2023 summer season. There is a wealth of data available and we are seeking to make the best possible use of it. We are proposing to apply the CLASSIC model to the BBECA in order to help Metro Vancouver determine the best management practices for the BBECA. We seek to estimate water and carbon budgets for the bog in its current state and test the potential efficacy of future restoration strategies such as dike construction and seedling removal."
  },
  {
    "objectID": "index.html#where-is-the-bbeca",
    "href": "index.html#where-is-the-bbeca",
    "title": "About the Burns Bog Ecological Conservancy",
    "section": "Where is the BBECA?",
    "text": "Where is the BBECA?\n\n\n<p>\nYour browser does not support iframes.\n</p>\n<p>"
  },
  {
    "objectID": "index.html#publications",
    "href": "index.html#publications",
    "title": "About the Burns Bog Ecological Conservancy",
    "section": "Publications",
    "text": "Publications\n\n\nSatriawan (2022)\nExler & Moore (2022)\nNyberg et al. (2022)\nLee et al. (2022)\nHowie et al. (2020)\nLee (2020)\nD′Acunha et al. (2019)\nLee et al. (2017)\nChristen et al. (2016)\n\n\n\n\nExler, J. L., & Moore, R. D. (2022). Quantifying throughfall, stemflow and interception loss in five vegetation communities in a maritime raised bog. Agricultural and Forest Meteorology, 327, 109202. https://doi.org/10.1016/j.agrformet.2022.109202\n\n\nLee, S.-C., Knox, S. H., McKendry, I., & Black, T. A. (2022). Biogeochemical and biophysical responses to episodes of wildfire smoke from natural ecosystems in southwestern British Columbia, Canada. Atmospheric Chemistry and Physics, 22(4), 2333–2349. https://doi.org/10.5194/acp-22-2333-2022\n\n\nNyberg, M., Black, T. A., Ketler, R., Lee, S.-C., Johnson, M., Merkens, M., et al. (2022). Impacts of Active Versus Passive Re-Wetting on the Carbon Balance of a Previously Drained Bog. Journal of Geophysical Research: Biogeosciences, 127(9), e2022JG006881. https://doi.org/10.1029/2022JG006881\n\n\nSatriawan, T. (2022). Interannual variability of carbon dioxide (CO₂) and methane (CH₄) fluxes in a temperate bog over a 5-year period (Master’s thesis). University of British Columbia. https://doi.org/10.14288/1.0416306\n\n\nHowie, S. A., Whitfield, P. H., & Moore, R. D. (2020). Plant community type is an indicator of the seasonal moisture deficit in a disturbed raised bog. Ecohydrology, 13(4), e2209. https://doi.org/10.1002/eco.2209\n\n\nLee, S.-C. (2020). Applying different partitioning and modelling approaches to investigate the effects of nitrogen fertilization and light inhibition on net ecosystem exchange using long-term eddy-covariance data (PhD thesis). University of British Columbia. https://doi.org/10.14288/1.0392866\n\n\nD′Acunha, B., Morillas, L., Black, T. A., Christen, A., & Johnson, M. S. (2019). Net Ecosystem Carbon Balance of a Peat Bog Undergoing Restoration: Integrating CO2 and CH4 Fluxes From Eddy Covariance and Aquatic Evasion With DOC Drainage Fluxes. Journal of Geophysical Research: Biogeosciences, 124(4), 884–901. https://doi.org/10.1029/2019JG005123\n\n\nLee, S.-C., Christen, A., Black, A. T., Johnson, M. S., Jassal, R. S., Ketler, R., et al. (2017). Annual greenhouse gas budget for a bog ecosystem undergoing restoration by rewetting. Biogeosciences, 14(11), 2799–2814.\n\n\nChristen, A., Jassal, R. S., Black, T. A., Grant, N. J., Hawthorne, I., Johnson, M. S., et al. (2016). Summertime greenhouse gas fluxes from an urban bog undergoing restoration through rewetting. Mires & Peat, 17."
  },
  {
    "objectID": "BBECA_Work.html#burns-bog-ecological-conservancy-area",
    "href": "BBECA_Work.html#burns-bog-ecological-conservancy-area",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "Burns Bog Ecological Conservancy Area",
    "text": "Burns Bog Ecological Conservancy Area\n\n\nProtects a raised ombrotrophic peat bog in Delta, BC.\n\n50+ years of peat harvesting & development\n\nBBECA established in 2004\n\nRestoration practices include:\n\nDitch blocking\nSeedling removal"
  },
  {
    "objectID": "BBECA_Work.html#climatology",
    "href": "BBECA_Work.html#climatology",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "Climatology",
    "text": "Climatology\n\n\nMean air temperature is 10.5 C. Average annual precipitation and evapotranspiration are 1160 mm and 750 mm.\n\nSummer: droughts, heatwaves, & fires\nWinter: flooding"
  },
  {
    "objectID": "BBECA_Work.html#ecosystems-in-the-bbeca",
    "href": "BBECA_Work.html#ecosystems-in-the-bbeca",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "Ecosystems in the BBECA",
    "text": "Ecosystems in the BBECA"
  },
  {
    "objectID": "BBECA_Work.html#bb1",
    "href": "BBECA_Work.html#bb1",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "BB1",
    "text": "BB1\n\n\nBeakrush-sphagnum ecosystem undergoing active restoration.\n\nHarvested from 1957 to 1963\n\nDitch-blocking began in 2007\nEC station established in 2015\n\nNet-neutral C fluxes between 2016 and 2021\n\nCO2 uptake offset by CH4 emissions"
  },
  {
    "objectID": "BBECA_Work.html#bb2",
    "href": "BBECA_Work.html#bb2",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "BB2",
    "text": "BB2\n\n\nBeakrush-sphagnum/pine-sphagnum ecosystem passively rewetting.\n\nHarvested from 1930 to 1948\n\nEC station established in 2019\n\nNet C source in 2020\n\nNet CO2 & CH4 emission"
  },
  {
    "objectID": "BBECA_Work.html#comparing-management-strategies",
    "href": "BBECA_Work.html#comparing-management-strategies",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "Comparing Management Strategies",
    "text": "Comparing Management Strategies\nPreliminary analysis: ditch blocking reduces radiative forcing.\n\nHow would CLASSIC handle these two sites?"
  },
  {
    "objectID": "BBECA_Work.html#bbs",
    "href": "BBECA_Work.html#bbs",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "BBS",
    "text": "BBS\nAssessing impact of seedling removal on C fluxes in a Pine-sphagnum ecosystem."
  },
  {
    "objectID": "BBECA_Work.html#bbs-1",
    "href": "BBECA_Work.html#bbs-1",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "BBS",
    "text": "BBS\n\n\nChamber measurement comparing treatments.\n\nTemporary EC installation *May"
  },
  {
    "objectID": "BBECA_Work.html#modelling-fluxes",
    "href": "BBECA_Work.html#modelling-fluxes",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "Modelling Fluxes",
    "text": "Modelling Fluxes\n\n\nModeling impacts of change on carbon and water fluxes\n\nTest management scenarios\n\nOptimize C sequestration\n\nRefine spatial inventory of BBECA Ecosystems"
  },
  {
    "objectID": "BBECA_Work.html#spatial-temporal-upscaling",
    "href": "BBECA_Work.html#spatial-temporal-upscaling",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "Spatial-Temporal Upscaling",
    "text": "Spatial-Temporal Upscaling\n\n\nRefine spatial inventory of BBECA Ecosystems\n\nCompare CLASSIC to machine learning approaches"
  },
  {
    "objectID": "BBECA_Work.html#ghg-fluxes-from-prairie-pothole-wetlands",
    "href": "BBECA_Work.html#ghg-fluxes-from-prairie-pothole-wetlands",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "GHG fluxes from Prairie Pothole wetlands",
    "text": "GHG fluxes from Prairie Pothole wetlands\nIn collaboration with Ducks Unlimited Canada, we are measuring GHG fluxes from wetlands in the Prairie Pothole region of Canada (Manitoba)."
  },
  {
    "objectID": "BBECA_Work.html#ghg-fluxes-from-prairie-pothole-wetlands-1",
    "href": "BBECA_Work.html#ghg-fluxes-from-prairie-pothole-wetlands-1",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "GHG fluxes from Prairie Pothole wetlands",
    "text": "GHG fluxes from Prairie Pothole wetlands\nDespite both looking like typical marshes, they have VERY different \\(CH_{4}\\) fluxes driven by differences in sulfate between the sites. This could be an interesting case study for CLASSIC."
  },
  {
    "objectID": "BBECA_Work.html#questions",
    "href": "BBECA_Work.html#questions",
    "title": "Ongoing and Proposed Research in the Burns Bog Ecological Conservancy Area",
    "section": "Questions",
    "text": "Questions"
  }
]